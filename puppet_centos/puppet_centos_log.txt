2015-02-23 14:30 -> Changed hostname from localhost to demo. In terminal, type sudo hostname demo. Then type sudo su -c 'echo demo >/etc/hostname'. Log out and then log back in again.

           14:40 -> Manifests folder created with site.pp and nodes.pp files

	   15:00 -> Type ip addr list |grep 0
		    Message received:
		    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
		    inet 127.0.0.1/8 scope host lo
		    2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
		    link/ether 08:00:27:a0:e8:11 brd ff:ff:ff:ff:ff:ff
		    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic enp0s3
		    valid_lft 69510sec preferred_lft 69510sec
		    inet6 fe80::a00:27ff:fea0:e811/64 scope link 

	   15:10 -> /etc/hosts file altered with first inet address (127.0.0.1) from above

2015-02-24 09:24 -> Have updated the manifests/site.pp file to include what was included in the manifests/nodes.pp file which, according to the Puppet 3 book, uses the IMPORT command. The IMPORT command has been deprecated and so I need to work around this.

	   09:44 -> Ran sudo puppet apply manifests/site.pp and received the following message.

			Notice: Compiled catalog for demo.belkin in environment production in 0.55 seconds
			Warning: The package type's allow_virtual parameter will be changing its default value from false to true in a future release. If you do not want to allow virtual packages, please explicitly set allow_virtual to false.
			(at /usr/share/ruby/vendor_ruby/puppet/type/package.rb:430:in `block (3 levels) in <module:Puppet>')

			Error: Execution of '/bin/yum -d 0 -e 0 -y list nginx' returned 1: Error: No matching Packages to list
			Error: /Stage[main]/Main/Node[demo]/Package[nginx]/ensure: change from absent to present failed: Execution of '/bin/yum -d 0 -e 0 -y list nginx' returned 1: Error: No matching Packages to list
			Notice: Finished catalog run in 46.36 seconds

	   09:57 -> Installing the *AMP stack to replace the 'nginx' which is asked for in the Puppet 3 book. [SOURCE: https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-centos-6] Commands used:
			sudo yum install httpd # Installs Apache
			sudo service httpd start # Starts Apache
			# THIS COMMAND DID NOT WORK. -> ifconfig eth0 | grep inet | awk '{ print $2 }' # Finds server address.
			# THIS COMMAND WORKED. -> /sbin/ifconfig
			enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
		        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
		        inet6 fe80::a00:27ff:fea0:e811  prefixlen 64  scopeid 0x20<link>
		        ether 08:00:27:a0:e8:11  txqueuelen 1000  (Ethernet)
		        RX packets 288374  bytes 320028657 (305.2 MiB)
		        RX errors 0  dropped 0  overruns 0  frame 0
		        TX packets 74967  bytes 6093405 (5.8 MiB)
		        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

			lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
		        inet 127.0.0.1  netmask 255.0.0.0
		        inet6 ::1  prefixlen 128  scopeid 0x10<host>
		        loop  txqueuelen 0  (Local Loopback)
		        RX packets 60  bytes 19176 (18.7 KiB)
		        RX errors 0  dropped 0  overruns 0  frame 0
		        TX packets 60  bytes 19176 (18.7 KiB)
		        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

	   10:22 -> Installing MariaDB. The command given in the Puppet 3 book for nginx does not work.
		    Commands used:
		    sudo yum install mariadb-server
		    sudo service mariadb start
	    	    sudo /usr/bin/
			OK, successfully used password, moving on...

			Setting the root password ensures that nobody can log into the MariaDB root user without the proper authorisation.

			Set root password? [Y/n] Y
			New password: 
			Re-enter new password: 
			Password updated successfully!
			Reloading privilege tables..
			 ... Success!

			By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without having to have a user account created for them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a production environment.

			Remove anonymous users? [Y/n] Y
			 ... Success!

			Normally, root should only be allowed to connect from 'localhost'.  This ensures that someone cannot guess at the root password from the network.

			Disallow root login remotely? [Y/n] Y
			 ... Success!

			By default, MariaDB comes with a database named 'test' that anyone can access.  This is also intended only for testing, and should be removed before moving into a production environment.

			Remove test database and access to it? [Y/n] Y
			 - Dropping test database...
			 ... Success!
			 - Removing privileges on test database...
			 ... Success!

			Reloading the privilege tables will ensure that all changes made so far will take effect immediately.

			Reload privilege tables now? [Y/n] Y	
			 ... Success!

			Cleaning up...

			All done!  If you've completed all of the above steps, your MariaDB installation should now be secure.

			Thanks for using MariaDB!

	   10:34 -> Installing PHP. Command used:
			sudo yum install php php-mysql

	   10:42 -> Testing PHP installation.
		    Commands used:
		    sudo vi /var/www/html/info.php
                      <?php
                	phpinfo();
                      ?>
		    (Save and exit) -> :wq
 		    (Restart Apache) -> sudo service httpd restart
		    (Visit homepage in browser) -> 127.0.0.1/info.php

	   10:53 -> Working through the CentOS architecture, I found that the replacement for the line in manifests/site.pp has to be changed to:
			package { 'httpd':
		    from
			package { 'nginx':
		    Tests are forthcoming.

	   10:56 -> Adding modules/ modules/httpd and modules/httpd/manifests [Note: the book has modules/ modules/nginx and modules/nginx/manifests]. This was altered to compensate for the change in the manifests/site.pp file.

	   11:10 -> Running sudo puppet apply manifests/site.pp and receive an error message that the httpd class cannot be found. Troubleshooting...

	   11:23 -> ERROR MESSAGE WHEN RUNNING PUPPET APPLY
			sudo puppet apply --debug manifests/site.pp 
			[sudo] password for timm-centos: 
			Debug: Runtime environment: puppet_version=3.7.4, ruby_version=2.0.0, run_mode=user, default_encoding=UTF-8
			Debug: Loading external facts from /var/lib/puppet/facts.d
			Error: Could not find class httpd for demo.belkin on node demo.belkin
			Error: Could not find class httpd for demo.belkin on node demo.belkin

	   12:09 -> Still working on the error message issue when running sudo puppet apply. 
 
	   12:25 -> SIMPLE FIX: Add the command '--modulepath=...' to the end of the puppet apply command.

	   12:37 -> Created the 'papply' script (from page 40). Commands below:
			sudo vi /usr/local/bin/papply 
				#! /bin/sh
				sudo puppet apply /home/timm-centos/git/centos/puppet_centos/manifests/site.pp --modulepath='/home/timm-centos/git/centos/puppet_centos/modules' $*
			sudo chmod a+x /usr/local/bin/papply 
			papply
				Notice: Compiled catalog for demo.belkin in environment production in 0.94 seconds
				Warning: The package type's allow_virtual parameter will be changing its default value from false to true in a future release. If you do not want to allow virtual packages, please explicitly set allow_virtual to false.
				   (at /usr/share/ruby/vendor_ruby/puppet/type/package.rb:430:in `block (3 levels) in <module:Puppet>')
Notice: Finished catalog run in 0.29 seconds 

           12:57 -> Evidently this error message is thrown because of an error in puppet modules. [SOURCE: https://ask.openstack.org/en/question/35705/attempt-of-rdo-aio-install-icehouse-on-centos-7/]

	   13:01 -> switching to Katello

2015-02-27 10:57 -> Back to Puppet :)

	   11:05 -> Added the following code to manifests/site.pp
		    	exec { 'Run my arbitrary code':
			  command => '/bin/echo I ran this arbitrary code on `/bin/date` >/tmp/command.output.txt'
			  }
		    Received the following output when running 'cat /tmp/command.output.txt':
		    [timm-centos@demo puppet_centos]$ cat /tmp/command.output.txt
		    I ran this command on Fri Feb 27 11:05:13 EST 2015

	   11:15 -> Added the following code to manifests/site.pp
			exec { 'Get public key for John':
			  cwd     => '/tmp', 	# cwd is current working directory.
			  command => '/usr/bin/wget http://bitfieldconsulting.com/files/john.pub',	# 
			  creates => '/tmp/john.pub'	# creates john.pub in /tmp directory. If the file already exists, the 'exec' function will not be executed. See below:

			[timm-centos@demo puppet_centos]$ papply
			  Notice: Compiled catalog for demo.belkin in environment production in 1.04 seconds
			  Notice: /Stage[main]/Main/Node[demo]/Exec[Download public key for John]/returns: executed successfully
			  Notice: /Stage[main]/Main/Node[demo]/Exec[Run my arbitrary command]/returns: executed successfully
			  Notice: Finished catalog run in 6.00 seconds

                        [timm-centos@demo puppet_centos]$ papply
                          Notice: Compiled catalog for demo.belkin in environment production in 0.97 seconds
                          Notice: /Stage[main]/Main/Node[demo]/Exec[Run my arbitrary command]/returns: executed successfully
                          Notice: Finished catalog run in 0.45 seconds

		   As one can see, the second run does not execute the code.

	   11:30 -> Trying a sample chaining command code.
		  	exec { 'step 1':
			    command => '/bin/echo Hi step 1 run on `/bin/date` >/tmp/testttss.output.txt',
			}

			exec { 'step 2':
			    command => '/bin/echo Hi step 2 run on `/bin/date` >/tmp/testtts2.output.txt',
			    require => Exec['step 1'],
			}

			exec { 'step 3':
			    command => '/bin/echo Hi step 3 run on `/bin/date` >/tmp/testtts3.output.txt',
			    require => Exec['step 2'],
			}
		    RUNS SUCCESSFULLY.

	   12:28 -> Added Art Vandalay as a new user and working on SSHing into the 'art' account. 'art' has been added to the sudoers file. SSH is refusing the connection at this point in time. Working on fixing this. 




